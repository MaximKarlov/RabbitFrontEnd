{"version":3,"file":"static/js/204.015c01d1.chunk.js","mappings":"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","sources":["components/AddRabbit/AddRabbit_breed.jsx","components/AddRabbit/AddRabbit.jsx","pages/AddRabbit.jsx","redux/rabbits/rabbitsSelector.js","webpack://react-homework-template/./src/components/App.module.css?6c4d"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as MUI from '@mui/material';\nimport { getRabbitsBreed } from '../../redux/rabbits/rabbitsSelector';\n// import { fetchRabbitsBreed } from '../../redux/rabbits/rabbitsOperation';\n\nfunction sleep(duration) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, duration);\n  });\n}\n\nexport const AddRabbitBreed = () => {\n  const [open, setOpen] = useState(false);\n  const [options, setOptions] = useState([]);\n  const loading = open && options.length === 0;\n  const dispatch = useDispatch();\n  // dispatch(fetchRabbitsBreed());\n\n  // Отримуємо частини стану\n  const breed = useSelector(getRabbitsBreed);\n  // const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    let active = true;\n\n    if (!loading) {\n      return undefined;\n    }\n\n    (async () => {\n      await sleep(1e3); // For demo purposes.\n\n      if (active) {\n        setOptions([...breed]);\n        console.log(options);\n      }\n    })();\n\n    return () => {\n      active = false;\n    };\n  }, [breed, dispatch, loading, options]);\n\n  useEffect(() => {\n    if (!open) {\n      setOptions([]);\n    }\n  }, [open]);\n\n  return (\n    <MUI.Autocomplete\n      id=\"asynchronous-demo\"\n      sx={{ width: 300 }}\n      open={open}\n      onOpen={() => {\n        setOpen(true);\n      }}\n      onClose={() => {\n        setOpen(false);\n      }}\n      isOptionEqualToValue={(option, value) => option.name === value.name}\n      getOptionLabel={option => option.name}\n      options={options}\n      loading={loading}\n      renderInput={params => (\n        <MUI.TextField\n          {...params}\n          label=\"Breed\"\n          InputProps={{\n            ...params.InputProps,\n            endAdornment: (\n              <>\n                {loading ? (\n                  <MUI.CircularProgress color=\"inherit\" size={20} />\n                ) : null}\n                {params.InputProps.endAdornment}\n              </>\n            ),\n          }}\n        />\n      )}\n    />\n  );\n};\n\n// Top films as rated by IMDb users. http://www.imdb.com/chart/top\n","import { useEffect, useState } from 'react';\nimport * as MUI from '@mui/material';\nimport { AddRabbitBreed } from './AddRabbit_breed';\n\nexport const RabbitForm = () => {\n  const [name, setName] = useState('');\n  const [gender, setGender] = useState('');\n  const [btn_check, setBtn_check] = useState(true);\n\n  const handleChange = event => {\n    setGender(event.target.value);\n  };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n\n  useEffect(() => {\n    if ((gender !== '') & (name !== '')) {\n      setBtn_check(false);\n    } else setBtn_check(true);\n  }, [btn_check, gender, name]);\n\n  return (\n    <div>\n      <MUI.Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          '& > :not(style)': { m: 1 },\n        }}\n      >\n        <MUI.TextField\n          helperText=\"Please enter name rabbit\"\n          id=\"demo-helper-text-misaligned\"\n          label=\"Name\"\n          onChange={handleNameChange}\n        />\n      </MUI.Box>\n      <div>{<AddRabbitBreed />}</div>\n      <div>\n        <MUI.FormControl sx={{ m: 1, minWidth: 150 }}>\n          <MUI.InputLabel id=\"demo-simple-select-autowidth-label\">\n            Gender\n          </MUI.InputLabel>\n          <MUI.Select\n            labelId=\"demo-simple-select-autowidth-label\"\n            id=\"demo-simple-select-autowidth\"\n            value={gender}\n            onChange={handleChange}\n            autoWidth\n            label=\"Gender\"\n          >\n            {/* <MUI.MenuItem value=\"\">\n                  <em>None</em>\n                </MUI.MenuItem> */}\n            <MUI.MenuItem value={'Самець'}>Самець</MUI.MenuItem>\n            <MUI.MenuItem value={'Самка'}>Самка</MUI.MenuItem>\n          </MUI.Select>\n        </MUI.FormControl>\n      </div>\n      <MUI.Button disabled={btn_check} variant=\"outlined\">\n        Add\n      </MUI.Button>\n      <MUI.Button variant=\"outlined\">Cancel</MUI.Button>\n    </div>\n  );\n};\n","import AppCss from '../components/App.module.css';\nimport { RabbitForm } from '../components/AddRabbit/AddRabbit';\n// import { Filter } from '../components/Filter/Filter';\n\nconst AddRabbit = () => {\n  return (\n    //Щось гітхаб не прийняв зміни при перейменуванні файлу\n    <>\n      <div className={AppCss.component}>\n        <h1>Add Rabbits</h1>\n        <RabbitForm />\n      </div>\n    </>\n  );\n};\n\nexport default AddRabbit;\n","export const getRabbits = state => state.rabbits.rabbits;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.rabbits.rabbits.isLoading;\nexport const getError = state => state.rabbits.rabbits.error;\nexport const getRabbitsBreed = state => state.rabbits.rabbits.breed;\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"App_component__1of+-\"};"],"names":["sleep","duration","Promise","resolve","setTimeout","AddRabbitBreed","useState","open","setOpen","options","setOptions","loading","length","dispatch","useDispatch","breed","useSelector","getRabbitsBreed","useEffect","active","console","log","id","sx","width","onOpen","onClose","isOptionEqualToValue","option","value","name","getOptionLabel","renderInput","params","label","InputProps","endAdornment","color","size","RabbitForm","setName","gender","setGender","btn_check","setBtn_check","display","alignItems","m","helperText","onChange","event","target","minWidth","labelId","autoWidth","disabled","variant","className","AppCss","component","getRabbits","state","rabbits","getIsLoading","isLoading"],"sourceRoot":""}