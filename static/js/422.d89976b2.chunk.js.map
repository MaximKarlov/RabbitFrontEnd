{"version":3,"file":"static/js/422.d89976b2.chunk.js","mappings":"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","sources":["components/RabbitBreed/RabbitBreedItems.jsx","webpack://react-homework-template/./src/components/RabbitBreed/RabbitBreed.module.css?1c7d","components/RabbitBreed/RabbitBreed.jsx","pages/RabbitBreed.jsx","redux/rabbits/rabbitsSelector.js","webpack://react-homework-template/./src/components/App.module.css?6c4d"],"sourcesContent":["// import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as MUI from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {\n  deleteRabbitBreed,\n  fetchRabbitsBreed,\n} from '../../redux/rabbits/rabbitsOperation';\n\nexport default function RabbitBreedItems({ BreedList }) {\n  // const [rowSelectionModel, setRowSelectionModel] = useState([]);\n  // const [elementToDeleteKey, setElementToDeleteKey] = useState([]);\n  const dispatch = useDispatch();\n  let counterID = 0;\n  // const rowsRabbitBreed = [];\n  // let elementToDeleteKey = [];\n\n  // BreedList.map(el =>\n  //   rowsRabbitBreed.push({\n  //     id: (counterID += 1),\n  //     name: el.name,\n  //     color: el.color,\n  //     about: el.about,\n  //     key: el._id,\n  //   })\n  // );\n\n  // const makeListToDelete = element => {\n  //   const listToDelete = [];\n  //   setRowSelectionModel(element);\n  //   rowSelectionModel.map(\n  //     id =>\n  //       rowsRabbitBreed.map(el => {\n  //         if (el.id === id) {\n  //           listToDelete.push(el.key);\n  //         }\n  //         return listToDelete;\n  //       }),\n  //     setElementToDeleteKey(listToDelete)\n  //   );\n  // };\n\n  // console.log('deleting2 elementToDeleteKey', elementToDeleteKey);\n\n  const deleteBreed = e => {\n    const breedID = e.target.getAttribute('id');\n    dispatch(deleteRabbitBreed(breedID)).then(() =>\n      dispatch(fetchRabbitsBreed())\n    );\n  };\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <MUI.TableContainer component={MUI.Paper}>\n        <MUI.Table\n          sx={{ minWidth: 650 }}\n          size=\"small\"\n          aria-label=\"a dense table\"\n        >\n          <MUI.TableHead>\n            <MUI.TableRow>\n              <MUI.TableCell align=\"center\">ID</MUI.TableCell>\n              <MUI.TableCell align=\"center\">Name</MUI.TableCell>\n              <MUI.TableCell align=\"center\">Color</MUI.TableCell>\n              <MUI.TableCell align=\"center\">About</MUI.TableCell>\n            </MUI.TableRow>\n          </MUI.TableHead>\n          <MUI.TableBody>\n            {BreedList.map(row => (\n              <MUI.TableRow\n                key={row._id}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <MUI.TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {(counterID += 1)}\n                </MUI.TableCell>\n                {/* <TableCell align=\"center\">{row.id}</TableCell> */}\n                <MUI.TableCell align=\"right\">{row.name}</MUI.TableCell>\n                <MUI.TableCell align=\"right\">{row.color}</MUI.TableCell>\n                <MUI.TableCell align=\"center\">{row.about}</MUI.TableCell>\n                <MUI.TableCell align=\"center\">\n                  <MUI.Button\n                    variant=\"outlined\"\n                    startIcon={<DeleteIcon />}\n                    type=\"text\"\n                    // className={ContactCss.btn}\n                    // onClick={findBreed}\n                  >\n                    Edit\n                  </MUI.Button>\n                </MUI.TableCell>\n                <MUI.TableCell align=\"center\">\n                  <MUI.Button\n                    id={row._id}\n                    variant=\"outlined\"\n                    startIcon={<DeleteIcon />}\n                    type=\"text\"\n                    // className={ContactCss.btn}\n                    onClick={deleteBreed}\n                  >\n                    Delete\n                  </MUI.Button>\n                </MUI.TableCell>\n              </MUI.TableRow>\n            ))}\n          </MUI.TableBody>\n        </MUI.Table>\n      </MUI.TableContainer>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"tableBreed\":\"RabbitBreed_tableBreed__ILwKU\",\"modalTitle\":\"RabbitBreed_modalTitle__4mHST\",\"modalInputs\":\"RabbitBreed_modalInputs__w2gyz\",\"modalButtons\":\"RabbitBreed_modalButtons__ETqhG\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { Loader } from '../Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport RabbitBreedItems from '../RabbitBreed/RabbitBreedItems';\nimport {\n  fetchRabbitsBreed,\n  addRabbitBreed,\n} from '../../redux/rabbits/rabbitsOperation';\nimport Modal from 'react-modal';\nimport Button from '@mui/material/Button';\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\n\nimport { TextField } from '@mui/material';\nimport {\n  getRabbitsBreed,\n  getIsLoading,\n} from '../../redux/rabbits/rabbitsSelector';\nimport RBCSS from './RabbitBreed.module.css';\n\nexport const RabbitBreedList = () => {\n  const [nameBreed, setNameBreed] = useState('');\n  const [colorBreed, setColorBreed] = useState('');\n  const [aboutBreed, setAboutBreed] = useState('');\n  const [modalIsOpen, setIsOpen] = useState(false);\n\n  const objectsToSend = {\n    name: nameBreed,\n    color: colorBreed,\n    about: aboutBreed,\n  };\n\n  const dispatch = useDispatch();\n\n  const customStyles = {\n    content: {\n      top: '50%',\n      left: '50%',\n      right: 'auto',\n      bottom: 'auto',\n      marginRight: '-50%',\n      transform: 'translate(-50%, -50%)',\n    },\n  };\n\n  // Modal.setAppElement('addBreedRabbit');\n  Modal.setAppElement('#root');\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  // Отримуємо частини стану\n  const breed = useSelector(getRabbitsBreed);\n  const isLoading = useSelector(getIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchRabbitsBreed());\n  }, [dispatch]);\n\n  const handleChangeName = event => {\n    setNameBreed(event.target.value);\n  };\n  const handleChangeColor = event => {\n    setColorBreed(event.target.value);\n  };\n\n  const handleChangeAbout = event => {\n    setAboutBreed(event.target.value);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    dispatch(addRabbitBreed(objectsToSend))\n      .then(el => (el.payload === 201 ? setIsOpen(false) : setIsOpen(true)))\n      .then(() => dispatch(fetchRabbitsBreed()));\n  };\n\n  return (\n    <div>\n      <div>\n        {isLoading ? <Loader /> : <RabbitBreedItems BreedList={breed} />}\n      </div>\n      <div>\n        <Button\n          variant=\"outlined\"\n          startIcon={<AddOutlinedIcon />}\n          type=\"text\"\n          // className={ContactCss.btn}\n          onClick={openModal}\n        >\n          ADD BREED\n        </Button>\n        <Modal\n          isOpen={modalIsOpen}\n          onRequestClose={closeModal}\n          style={customStyles}\n          contentLabel=\"Example Modal\"\n        >\n          <h2 className={RBCSS.modalTitle}>Add Breed Rabbit</h2>\n\n          <form className={RBCSS.modalInputs} onSubmit={onSubmit}>\n            <TextField\n              id=\"nameBreed\"\n              label=\"Name Breed\"\n              variant=\"outlined\"\n              inputProps={{ style: { fontSize: 22 } }}\n              InputLabelProps={{ style: { fontSize: 16 } }}\n              onChange={handleChangeName}\n            />\n            <TextField\n              id=\"ColorBreed\"\n              label=\"Color Breed\"\n              variant=\"outlined\"\n              inputProps={{ style: { fontSize: 22 } }}\n              InputLabelProps={{ style: { fontSize: 16 } }}\n              onChange={handleChangeColor}\n            />\n            <TextField\n              id=\"AboutBreed\"\n              label=\"About Breed\"\n              multiline\n              inputProps={{ style: { fontSize: 22 } }}\n              InputLabelProps={{ style: { fontSize: 16 } }}\n              onChange={handleChangeAbout}\n            />\n            <div className={RBCSS.modalButtons}>\n              <button type=\"submit\">Add</button>\n              <button onClick={closeModal}>Close</button>\n            </div>\n          </form>\n        </Modal>\n      </div>\n    </div>\n  );\n};\n","import AppCss from '../components/App.module.css';\nimport { RabbitBreedList } from '../components/RabbitBreed/RabbitBreed';\n// import { Filter } from '../components/Filter/Filter';\n\nconst RabbitBreed = () => {\n  return (\n    //Щось гітхаб не прийняв зміни при перейменуванні файлу\n    <>\n      <div className={AppCss.component}>\n        <h1>Rabbits breeds</h1>\n        <RabbitBreedList />\n      </div>\n    </>\n  );\n};\n\nexport default RabbitBreed;\n","export const getRabbits = state => state.rabbits.rabbits;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.rabbits.rabbits.isLoading;\nexport const getError = state => state.rabbits.rabbits.error;\nexport const getRabbitsBreed = state => state.rabbits.rabbits.breed;\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"App_component__1of+-\"};"],"names":["RabbitBreedItems","BreedList","dispatch","useDispatch","counterID","deleteBreed","e","breedID","target","getAttribute","deleteRabbitBreed","then","fetchRabbitsBreed","style","height","width","component","MUI","sx","minWidth","size","align","map","row","border","scope","name","color","about","variant","startIcon","Delete","type","id","_id","onClick","RabbitBreedList","useState","nameBreed","setNameBreed","colorBreed","setColorBreed","aboutBreed","setAboutBreed","modalIsOpen","setIsOpen","objectsToSend","closeModal","Modal","breed","useSelector","getRabbitsBreed","isLoading","getIsLoading","useEffect","Loader","Button","AddOutlined","isOpen","onRequestClose","content","top","left","right","bottom","marginRight","transform","contentLabel","className","RBCSS","onSubmit","preventDefault","addRabbitBreed","el","payload","TextField","label","inputProps","fontSize","InputLabelProps","onChange","event","value","multiline","AppCss","getRabbits","state","rabbits"],"sourceRoot":""}