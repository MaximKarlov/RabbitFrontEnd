{"version":3,"file":"static/js/344.edc44d4e.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/AddOutlined.js","components/Rabbits/Rabbits_item.jsx","components/Rabbits/Rabbits.jsx","components/AddRabbit/GetRabbitBreedList.jsx","components/AddRabbit/RabbitGender.jsx","components/AddRabbit/RabbitMother.jsx","components/AddRabbit/RabbitFather.jsx","components/AddRabbitModal/AddRabbitModal.jsx","components/btnMenu/btnMenu.jsx","pages/Rabbits.jsx","../node_modules/@mui/icons-material/Delete.js","redux/rabbits/rabbitsSelector.js","webpack://react-homework-template/./src/components/App.module.css?6c4d"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'AddOutlined');\nexports.default = _default;","import { useDispatch } from 'react-redux';\nimport {\n  deleteRabbit,\n  findRabbitById,\n  fetchRabbits,\n} from '../../redux/rabbits/rabbitsOperation';\nimport { Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\nexport const RabbitsItem = ({ Rabbits }) => {\n  const dispatch = useDispatch();\n  // const isLoading = useSelector(getIsLoading);\n\n  const rowsRabbit = [];\n\n  Rabbits.map(el =>\n    rowsRabbit.push({\n      id: Rabbits.indexOf(el) + 1,\n      _id: el._id,\n      gender: el.gender,\n      name: el.name,\n      breed: el.breed,\n      photoRabbit: el.photoRabbit,\n      dateBirthDay: el.dateBirthDay,\n      cage: el.cage,\n      mother: el.mother,\n      father: el.father,\n      favorite: el.favorite,\n    })\n  );\n\n  const deleteRabbits = e => {\n    const rabbitID = e.target.parentElement.parentElement.getAttribute('_id');\n    dispatch(deleteRabbit(rabbitID)).then(() => dispatch(fetchRabbits()));\n  };\n\n  const findRabbits = e => {\n    const rabbitID = e.target.parentElement.parentElement.getAttribute('_id');\n    dispatch(findRabbitById(rabbitID));\n  };\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">ID</TableCell>\n              <TableCell align=\"right\">Name</TableCell>\n              <TableCell align=\"right\">Gender</TableCell>\n              <TableCell align=\"right\">Breed</TableCell>\n              <TableCell align=\"center\">Date BirthDay</TableCell>\n              <TableCell align=\"right\">Mother</TableCell>\n              <TableCell align=\"right\">Father</TableCell>\n              <TableCell align=\"right\">cage</TableCell>\n              <TableCell align=\"right\">Photo Rabbit</TableCell>\n              <TableCell align=\"right\">favorite</TableCell>\n              <TableCell align=\"center\">Edit</TableCell>\n              <TableCell align=\"center\">Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rowsRabbit.map(row => (\n              <TableRow\n                _id={row._id}\n                key={row._id}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\" align=\"center\">\n                  {row.id}\n                </TableCell>\n                {/* <TableCell align=\"center\">{row.id}</TableCell> */}\n                <TableCell align=\"right\">{row.name}</TableCell>\n                <TableCell align=\"right\">{row.gender}</TableCell>\n                <TableCell align=\"right\">{row.breed}</TableCell>\n                <TableCell align=\"right\">{row.dateBirthDay}</TableCell>\n                <TableCell align=\"right\">{row.mother}</TableCell>\n                <TableCell align=\"right\">{row.father}</TableCell>\n                <TableCell align=\"right\">{row.cage}</TableCell>\n                <TableCell align=\"right\">{row.photoRabbit}</TableCell>\n                <TableCell align=\"right\">{row.favorite.toString()}</TableCell>\n                <TableCell align=\"center\">\n                  <Button\n                    variant=\"outlined\"\n                    startIcon={<DeleteIcon />}\n                    type=\"text\"\n                    // className={ContactCss.btn}\n                    onClick={findRabbits}\n                  >\n                    Edit\n                  </Button>\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Button\n                    variant=\"outlined\"\n                    startIcon={<DeleteIcon />}\n                    type=\"text\"\n                    // className={ContactCss.btn}\n                    onClick={deleteRabbits}\n                  >\n                    Delete\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { RabbitsItem } from './Rabbits_item';\n// import { AddRabbitModal } from '../AddRabbitModal/AddRabbitModal';\nimport { Loader } from '../Loader/Loader';\nimport { useEffect } from 'react';\n\nimport {\n  fetchRabbits,\n  fetchRabbitsBreed,\n} from '../../redux/rabbits/rabbitsOperation';\nimport {\n  getRabbits,\n  // getRabbitsBreed,\n  // getError,\n  getIsLoading,\n} from '../../redux/rabbits/rabbitsSelector';\n\nexport const RabbitList = () => {\n  const dispatch = useDispatch();\n\n  // Отримуємо частини стану\n  const { rabbits } = useSelector(getRabbits);\n  const isLoading = useSelector(getIsLoading);\n  // const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchRabbits());\n    dispatch(fetchRabbitsBreed());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading ? (\n        <Loader />\n      ) : rabbits ? (\n        <RabbitsItem Rabbits={rabbits} />\n      ) : null}\n    </div>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport * as MUI from '@mui/material';\nimport { getRabbitsBreed } from '../../redux/rabbits/rabbitsSelector';\n\nexport const GetRabbitBreedList = ({ breedSelect, onChangeBreed }) => {\n  // Отримуємо частини стану\n  const breed = useSelector(getRabbitsBreed);\n  // const isLoading = useSelector(getIsLoading);\n\n  return (\n    <MUI.FormControl fullWidth>\n      <MUI.InputLabel id=\"Breed\">Breed</MUI.InputLabel>\n      <MUI.Select\n        labelId=\"Breed\"\n        id=\"Breed\"\n        value={breedSelect}\n        label=\"Breed\"\n        onChange={onChangeBreed}\n      >\n        {breed.map(breed => {\n          return (\n            <MUI.MenuItem key={breed.name} value={breed.name}>\n              {breed.name}\n            </MUI.MenuItem>\n          );\n        })}\n      </MUI.Select>\n    </MUI.FormControl>\n  );\n};\n","import * as MUI from '@mui/material';\n\nexport const RabbitGender = ({ gender, onChangeGender }) => {\n  return (\n    <MUI.FormControl fullWidth>\n      <MUI.InputLabel id=\"Gender\">Gender</MUI.InputLabel>\n      <MUI.Select\n        labelId=\"Gender\"\n        id=\"Gender\"\n        value={gender}\n        label=\"Gender\"\n        onChange={onChangeGender}\n      >\n        <MUI.MenuItem value=\"Самець\">Самець</MUI.MenuItem>\n        <MUI.MenuItem value=\"Самка\">Самка</MUI.MenuItem>\n      </MUI.Select>\n    </MUI.FormControl>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport * as MUI from '@mui/material';\nimport { getRabbits } from '../../redux/rabbits/rabbitsSelector';\n\nexport const RabbitMother = ({ mother, onChangeMother }) => {\n  // Отримуємо частини стану\n  const { rabbits } = useSelector(getRabbits);\n  // const isLoading = useSelector(getIsLoading);\n\n  return (\n    <MUI.FormControl fullWidth>\n      <MUI.InputLabel id=\"Mother\">Mother</MUI.InputLabel>\n      <MUI.Select\n        labelId=\"Mother\"\n        id=\"Mother\"\n        value={mother}\n        label=\"Mother\"\n        onChange={onChangeMother}\n      >\n        {rabbits.map(el =>\n          el.gender === 'Самка' ? (\n            <MUI.MenuItem id={el._id} key={el._id} value={el.name}>\n              {el.name}\n            </MUI.MenuItem>\n          ) : (\n            <MUI.MenuItem value=\"-\">-</MUI.MenuItem>\n          )\n        )}\n      </MUI.Select>\n    </MUI.FormControl>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport * as MUI from '@mui/material';\nimport { getRabbits } from '../../redux/rabbits/rabbitsSelector';\n\nexport const RabbitFather = ({ father, onChangeFather }) => {\n  // Отримуємо частини стану\n  const { rabbits } = useSelector(getRabbits);\n  // const isLoading = useSelector(getIsLoading);\n\n  return (\n    <MUI.FormControl fullWidth>\n      <MUI.InputLabel id=\"Father\">Father</MUI.InputLabel>\n      <MUI.Select\n        labelId=\"Father\"\n        id=\"Father\"\n        value={father}\n        label=\"Father\"\n        onChange={onChangeFather}\n      >\n        {rabbits.map(el =>\n          el.gender === 'Самець' ? (\n            <MUI.MenuItem id={el._id} key={el._id} value={el.name}>\n              {el.name}\n            </MUI.MenuItem>\n          ) : (\n            <MUI.MenuItem value=\"-\">-</MUI.MenuItem>\n          )\n        )}\n      </MUI.Select>\n    </MUI.FormControl>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as MUI from '@mui/material/';\nimport { GetRabbitBreedList } from '../AddRabbit/GetRabbitBreedList';\nimport { RabbitGender } from '../AddRabbit/RabbitGender';\nimport { RabbitMother } from '../AddRabbit/RabbitMother';\nimport { RabbitFather } from '../AddRabbit/RabbitFather';\nimport { addRabbit, fetchRabbits } from '../../redux/rabbits/rabbitsOperation';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nexport default function AddRabbitModal({ openModal, closeModal }) {\n  const [name, setName] = useState('');\n  const [gender, setGender] = useState('');\n  const [breed, setBreed] = useState('');\n  const [mother, setMother] = useState('');\n  const [father, setFather] = useState('');\n  // const [cage, setCage] = useState('');\n  // const [age, setAge] = useState('');\n  // const [dateBirth, setDateBirth] = useState('');\n  const [btn_check, setBtn_check] = useState(true);\n\n  const dispatch = useDispatch();\n\n  const rabbitToSend = {\n    name,\n    breed,\n    gender,\n    mother,\n    father,\n    // cage,\n    // age,\n    // dateBirth,\n  };\n\n  const handleChange = event => {\n    console.log(event);\n    switch (event.target.id) {\n      case 'Name':\n        setName(event.target.value);\n        console.log('name', name);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleChangeBreed = event => {\n    setBreed(event.target.value);\n  };\n\n  const handleChangeGender = event => {\n    setGender(event.target.value);\n  };\n\n  const handleChangeMother = event => {\n    setMother(event.target.value);\n  };\n\n  const handleChangeFather = event => {\n    setFather(event.target.value);\n  };\n\n  useEffect(() => {\n    if ((gender !== '') & (name !== '')) {\n      setBtn_check(false);\n    } else setBtn_check(true);\n  }, [btn_check, gender, name]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    dispatch(addRabbit(rabbitToSend))\n      .then(el => (el.payload === 201 ? closeModal() : ''))\n      .then(() => dispatch(fetchRabbits()));\n  };\n\n  return (\n    <div>\n      <MUI.Modal\n        open={openModal}\n        onClose={closeModal}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <MUI.Box sx={style}>\n          <form onSubmit={onSubmit}>\n            <div>\n              <MUI.TextField\n                helperText=\"Please enter name rabbit\"\n                id=\"Name\"\n                label=\"Name\"\n                onChange={handleChange}\n              />\n              {\n                <GetRabbitBreedList\n                  breedSelect={breed}\n                  onChangeBreed={handleChangeBreed}\n                />\n              }\n              {\n                <RabbitGender\n                  gender={gender}\n                  onChangeGender={handleChangeGender}\n                />\n              }\n              {\n                <RabbitMother\n                  gender={mother}\n                  onChangeMother={handleChangeMother}\n                />\n              }\n              {\n                <RabbitFather\n                  gender={father}\n                  onChangeFather={handleChangeFather}\n                />\n              }\n            </div>\n            <div>\n              <MUI.Button type=\"submit\" disabled={btn_check} variant=\"outlined\">\n                Add\n              </MUI.Button>\n              <MUI.Button variant=\"outlined\" onClick={closeModal}>\n                Cancel\n              </MUI.Button>\n            </div>\n          </form>\n        </MUI.Box>\n      </MUI.Modal>\n    </div>\n  );\n}\n","// import FormCss from '../Form/Form.module.css';\nimport { useState } from 'react';\n// import { NavLink } from 'react-router-dom';\nimport * as MUI from '@mui/material';\nimport AddOutlinedIcon from '@mui/icons-material/AddOutlined';\nimport AddRabbitModal from '../AddRabbitModal/AddRabbitModal';\n\nexport const ButtonMenu = () => {\n  // const location = useLocation();\n\n  const [open, setOpen] = useState(false);\n\n  const openModal = () => {\n    setOpen(true);\n  };\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <MUI.Button\n        variant=\"outlined\"\n        startIcon={<AddOutlinedIcon />}\n        type=\"text\"\n        // className={ContactCss.btn}\n        onClick={openModal}\n      >\n        ADD Rabbit\n      </MUI.Button>\n      {open ? <AddRabbitModal openModal={open} closeModal={closeModal} /> : ''}\n    </div>\n  );\n};\n// <>\n//   <MUI.Stack direction=\"row\" spacing={2}></MUI.Stack>\n//   <NavLink to=\"/rabbits/addRabbit\" className={CSS.linked}>\n//     <MUI.Button\n//       variant=\"outlined\"\n//       startIcon={<AddOutlinedIcon />}\n//       type=\"text\"\n//       // className={ContactCss.btn}\n//       // onClick={() => dispatch(deleteContact(id))}\n//     >\n//       ADD Rabbit\n//     </MUI.Button>\n//   </NavLink>\n//   <NavLink to=\"/rabbits/breedList\" className={CSS.linked}>\n//     <MUI.Button\n//       variant=\"outlined\"\n//       startIcon={<AddOutlinedIcon />}\n//       type=\"text\"\n//       // className={ContactCss.btn}\n//       // onClick={() => dispatch(deleteContact(id))}\n//     >\n//       ADD Breed\n//     </MUI.Button>\n//   </NavLink>\n// {\n/* <NavLink to=\"/rabbits/add\" className={CSS.linked}>\n        <button type=\"button\">ADD Rabbit page</button>\n      </NavLink>\n      <NavLink to=\"/rabbits/add\" className={CSS.linked}>\n        <button type=\"button\">ADD Rabbit page</button>\n      </NavLink> */\n// }\n\n// {\n/* <button type=\"button\">Breed page</button> */\n// }\n//   <button>Edit</button>\n// </>\n//   );\n// };\n","import AppCss from '../components/App.module.css';\n// import { RabbitForm } from '../components/Form/Form';\n// import { Filter } from '../components/Filter/Filter';\nimport { RabbitList } from '../components/Rabbits/Rabbits';\nimport { ButtonMenu } from '../components/btnMenu/btnMenu';\n\nexport default function Main() {\n  return (\n    //Щось гітхаб не прийняв зміни при перейменуванні файлу\n    <>\n      <div className={AppCss.component}>\n        {/* <h1>Rabbits</h1> */}\n        {/* <RabbitForm /> */}\n        {/* <h2>Contacts</h2> */}\n        {/* <Filter /> */}\n        <RabbitList />\n      </div>\n      <div>\n        <ButtonMenu />\n      </div>\n    </>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","export const getRabbits = state => state.rabbits;\nexport const getFilter = state => state.filter;\nexport const getIsLoading = state => state.rabbits.isLoading;\nexport const getError = state => state.rabbits.error;\nexport const getRabbitsBreed = state => state.rabbits.breed;\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"App_component__1of+-\"};"],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","RabbitsItem","_ref","Rabbits","dispatch","useDispatch","rowsRabbit","map","el","push","id","indexOf","_id","gender","name","breed","photoRabbit","dateBirthDay","cage","mother","father","favorite","deleteRabbits","e","rabbitID","target","parentElement","getAttribute","deleteRabbit","then","fetchRabbits","findRabbits","findRabbitById","_jsx","style","height","width","children","TableContainer","component","Paper","_jsxs","Table","sx","minWidth","size","TableHead","TableRow","TableCell","align","TableBody","row","border","scope","toString","Button","variant","startIcon","DeleteIcon","type","onClick","RabbitList","rabbits","useSelector","getRabbits","isLoading","getIsLoading","useEffect","fetchRabbitsBreed","Loader","GetRabbitBreedList","breedSelect","onChangeBreed","getRabbitsBreed","MUI","fullWidth","labelId","value","label","onChange","RabbitGender","onChangeGender","RabbitMother","onChangeMother","RabbitFather","onChangeFather","position","top","left","transform","bgcolor","boxShadow","p","AddRabbitModal","openModal","closeModal","setName","useState","setGender","setBreed","setMother","setFather","btn_check","setBtn_check","rabbitToSend","open","onClose","onSubmit","preventDefault","addRabbit","payload","helperText","event","console","log","disabled","ButtonMenu","setOpen","AddOutlinedIcon","Main","_Fragment","className","AppCss","state"],"sourceRoot":""}